The yt community is proud to announce the release of yt 3.0.

yt (http://yt-project.org) is an open source, community-developed
toolkit for analysis and visualization of volumetric data of all
types, with a particular emphasis on astrophysical simulations and
nuclear engineering simulations.

This release of yt features an entirely rewritten infrastructure for
data ingestion, indexing, and representation.  While past versions of
yt were focused on analysis and visualization of data structured as
regular grids, this release features full support for particle
(discrete point) data such as N-body and SPH data, irregular
hexahedral mesh data, and data organized via octrees.  This
infrastructure will be extended in future versions for high-fidelity
representation of unstructured mesh datasets.

Highlighted changes in yt 3.0:

 * Units now permeate the code base, enabling self-consistent unit
transformations of all arrays and quantities returned by yt.
 * Particle data is now supported using a lightweight octree.  SPH
data can be smoothed onto an adaptively-defined mesh using standard
SPH smoothing
 * Support for octree AMR codes
 * Preliminary Support for non-Cartesian data, such as cylindrical,
spherical, and geographical
 * Revamped analysis framework for halos and halo catalogs, including
direct ingestion and analysis of halo catalogs of several different
formats
 * Support for multi-fluid datasets and datasets containing multiple
particle types
 * Flexible support for dynamically defining new particle types using
filters on existing particle types or by combining different particle
types.
 * Vastly improved support for loading generic grid, AMR, hexahedral
mesh, and particle without hand-coding a frontend for a particular
data format.
 * New frontends for ART, ARTIO, Boxlib, Chombo, FITS, GDF, Subfind,
Rockstar, Pluto, RAMSES, SDF, Gadget, OWLS, PyNE, Tipsy, as well as
rewritten frontends for Enzo, FLASH, Athena, and generic data.
 * First release to support installation of yt on Windows
 * Extended capabilities for construction of simulated observations,
and new facilities for analyzing and visualizing FITS images and cube
data
 * Many performance improvements

This release is the first of several; while most functionality from
the previous generation of yt has been updated to work with yt 3.0, it
does not yet have feature parity in all respects.  While the core of
yt is stable, we suggest the support for analysis modules and volume
rendering be viewed as a late-stage beta, with a series of additional
releases (3.1, 3.2, etc) appearing over the course of the next year to
improve support in these areas.

For more information, including installation instructions, links to
community resources, and information on contributing to ytâ€™s
development, please see the yt homepage at http://yt-project.org and
the documentation for yt-3.0 at http://yt-project.org/docs/3.0

yt is the product of a large community of developers and users and we
are extraordinarily grateful for and proud of their contributions.  yt
3.0 features contributions from over 60 individuals, constituting
almost 5000 commits. For many contributors, this is the first release
featuring their work.

Please forward this announcement on to any interested parties, and
look for information soon about upcoming workshops focused on yt and
applying it to your data.

Thank you,
